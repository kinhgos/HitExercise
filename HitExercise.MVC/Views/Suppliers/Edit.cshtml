@model HitExercise.MVC.Models.ViewModels.SupplierViewModel

@{
    ViewBag.Title = "Edit";
}
@Styles.Render("~/Content/css")
<h2>Edit Supplier</h2>


@using (Html.BeginForm("Edit", "Suppliers", FormMethod.Post, new { @class = "edit-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Supplier.Id, new { id = "getId" })

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier.Name, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Supplier.Name, new { htmlAttributes = new { @class = "form-control", id = "getName" } })
                @Html.ValidationMessageFor(model => model.Supplier.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.Supplier.CategoryId, new SelectList(Model.Categories, "Id", "Title"), new { @class = "form-control", @id = "getCategory" })
                @Html.ValidationMessageFor(model => model.Categories, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier.Afm, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Supplier.Afm, new { htmlAttributes = new { @class = "form-control", id = "getAfm" } })
                @Html.ValidationMessageFor(model => model.Supplier.Afm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier.Address, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Supplier.Address, new { htmlAttributes = new { @class = "form-control", id = "getAddress" } })
                @Html.ValidationMessageFor(model => model.Supplier.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier.Telephone, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Supplier.Telephone, new { htmlAttributes = new { @class = "form-control", id = "getTelephone" } })
                @Html.ValidationMessageFor(model => model.Supplier.Telephone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier.Email, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Supplier.Email, new { htmlAttributes = new { @class = "form-control", id = "getEmail" } })
                @Html.ValidationMessageFor(model => model.Supplier.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.Supplier.CountryId, new SelectList(Model.Countries, "Id", "Name"), new { @class = "form-control", @id = "getCountry" })
                @Html.ValidationMessageFor(model => model.Countries, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier.Inactive, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.CheckBoxFor(model => model.Supplier.Inactive, new { htmlAttributes = new { id = "getInactive" } })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-5">
                <input type="submit" id="edit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/lib")
    @Scripts.Render("~/bundles/InactiveSup")

    

}

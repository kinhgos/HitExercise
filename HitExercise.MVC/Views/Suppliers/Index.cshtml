@model HitExercise.MVC.Models.ViewModels.SupplierViewModel

@{
    ViewBag.Title = "Supplier List";
}

<h2>Index</h2>

<p>
    <button type="button" class="btn btn-primary" id="test" data-toggle="modal" data-target="#supplierModal">
        <i class="fas fa-plus"></i> Add New
    </button>
</p>




@*-------------- Add New MODAL START--------------------------*@

<div class="modal fade" id="supplierModal" role="dialog" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Add New Supplier</h2>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Add", "Suppliers", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Supplier.Name, htmlAttributes: new { @class = "control-label col-md-5 " })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Supplier.Name, new { htmlAttributes = new { @class = "form-control", @id = "getName" } })
                                @Html.ValidationMessageFor(model => model.Supplier.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Supplier.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Supplier.CategoryId, new SelectList(Model.Categories, "Id", "Title"), "Select Category", new { @class = "form-control", @id = "getCategory" })
                                @Html.ValidationMessageFor(model => model.Supplier.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Supplier.Afm, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Supplier.Afm, new { htmlAttributes = new { @class = "form-control", @id = "getAfm" } })
                                @Html.ValidationMessageFor(model => model.Supplier.Afm, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Supplier.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Supplier.Address, new { htmlAttributes = new { @class = "form-control", @id = "getAddress" } })
                                @Html.ValidationMessageFor(model => model.Supplier.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Supplier.Telephone, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Supplier.Telephone, new { htmlAttributes = new { @class = "form-control", @id = "getTelephone" } })
                                @Html.ValidationMessageFor(model => model.Supplier.Telephone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Supplier.Email, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Supplier.Email, new { htmlAttributes = new { @class = "form-control", @id = "getEmail" } })
                                @Html.ValidationMessageFor(model => model.Supplier.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Supplier.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Supplier.CountryId, new SelectList(Model.Countries, "Id", "Name"), "Select Country", new { @class = "form-control", @id = "getCountry" })
                                @Html.ValidationMessageFor(model => model.Supplier.CountryId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Supplier.Inactive, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-5">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Supplier.Inactive, new { @id = "getInactive" })
                                    @Html.ValidationMessageFor(model => model.Supplier.Inactive, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-offset-6">
                            <button type="submit" class="btn btn-primary " id="save">Save Supplier</button>
                            <button type="reset" class="btn btn-default ">Crear</button>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button data-toggle="modal" data-target="#supplierModal" class="btn btn-danger">Cancel</button>
            </div>
        </div>
    </div>
</div>
@*-------------- Add New MODAL END--------------------------*@

@*-------------- Suppliers List START--------------------------*@


<table class="table table-striped table-bordered" id="suppliers">
    <thead></thead>

    <tbody></tbody>


</table>

@*-------------- Suppliers List END--------------------------*@

<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />

@Scripts.Render("~/bundles/lib")
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@Scripts.Render("~/bundles/index")
@Scripts.Render("~/bundles/InactiveSup")




